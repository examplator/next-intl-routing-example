// import clsx from "clsx";
// import { Inter } from "next/font/google";
// import { NextIntlClientProvider } from "next-intl";
// import {
//   getMessages,
//   getTranslations,
//   unstable_setRequestLocale,
// } from "next-intl/server";
// import { ReactNode } from "react";
// // import Navigation from "@/components/Navigation";
// import { locales } from "@/locales";

// const inter = Inter({ subsets: ["latin"] });

// type Props = {
//   children: ReactNode;
//   params: { locale: string };
// };

// export function generateStaticParams() {
//   return locales.map((locale) => ({ locale }));
// }

// export async function generateMetadata({
//   params: { locale },
// }: Omit<Props, "children">) {
//   const t = await getTranslations({ locale, namespace: "LocaleLayout" });

//   return {
//     title: t("title"),
//   };
// }

// export default async function LocaleLayout({
//   children,
//   params: { locale },
// }: Props) {
//   // Enable static rendering
//   unstable_setRequestLocale(locale);

//   // Providing all messages to the client
//   // side is the easiest way to get started
//   const messages = await getMessages();

//   return (
//     <html className="h-full" lang={locale}>
//       <body className={clsx(inter.className, "flex h-full flex-col")}>
//         <NextIntlClientProvider messages={messages}>
//           {children}
//         </NextIntlClientProvider>
//       </body>
//     </html>
//   );
// }

// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>{children}</body>
//     </html>
//   );
// }

// import { NextIntlClientProvider } from "next-intl";
// import { getMessages } from "next-intl/server";

// export default async function RootLayout({
//   children,
//   params: { locale },
// }: {
//   children: React.ReactNode;
//   params: { locale: string };
// }) {
//   const messages = await getMessages();

//   return (
//     <html lang={locale}>
//       <body>
//         <NextIntlClientProvider messages={messages}>
//           {children}
//         </NextIntlClientProvider>
//       </body>
//     </html>
//   );
// }
///---------

import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";

export default async function LocaleLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body>
        <NextIntlClientProvider messages={messages}>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
